////	UILabel.as//	Core UI Framework////	Created by Raweden on 2011-07-11//	Copyright 2011 Raweden. Some rights reserved.//package se.raweden.ui.view{	import flash.display.DisplayObjectContainer;	import flash.geom.Rectangle;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;		import se.raweden.core.core;			/**	 * A <code>UILabel</code> view	 * 	 * @author Raweden	 */	public class UILabel extends UIView{				use namespace core;				private static const DEFAULT_TEXTFORMAT:TextFormat = new TextFormat("Arial",13,0x101010);				core var textField:TextField;		private var m_textFormat:TextFormat;		private var _html:Boolean = false;				/**		 * Constructor.		 */		public function UILabel(parent:DisplayObjectContainer = null,frame:Rectangle = null){			super(parent,frame);			// initilizes this instance.			addChildren();			init();		}				// adding DisplayObject and sub-component to this component instance.		private function addChildren():void{			// creates the text-field to hold the text label.			textField = new TextField();			textField.defaultTextFormat = DEFAULT_TEXTFORMAT;			textField.autoSize = TextFieldAutoSize.LEFT;			m_textFormat = new TextFormat();			textField.height = height;			textField.embedFonts = false;			textField.selectable = false;			textField.mouseEnabled = false;			this.addChild(textField);		}		// initilizes this component instance.		private function init():void{			// setting the defaults size.			this.resize(120,20);		}				//------------------------------------		// Getting and Setting Text Properties		//------------------------------------				/**		 * 		 */		public function set text(value:String):void{			_html = false;			textField.text = value;			this.setNeedsLayout();		}		// returns the current text set as label.		public function get text():String{			return(textField.text)		}				/**		 * 		 */		public function set wordWrap(value:Boolean):void{			textField.wordWrap = value;		}		// indicates if wordWrap is currently enabled.		public function get wordWrap():Boolean{			return(textField.wordWrap);		}				/**		 * 		 */		public function set font(value:String):void{			m_textFormat.font = value;			applyFormat(m_textFormat);		}		// returns the current font.		public function get font():String{			return m_textFormat.font;		}				/**		 * 		 */		public function set color(value:uint):void{			m_textFormat.color = value;			applyFormat(m_textFormat);		}		// returns the current textcolor.		public function get color():uint{			return m_textFormat.color as uint;		}				/**		 * 		 */		public function set size(value:Number):void{			m_textFormat.size = value;			applyFormat(m_textFormat);		}		// indicates the current fontsize.		public function get size():Number{			return m_textFormat.size as Number;		}				/**		 * 		 */		public function set align(value:String):void{			value = (value == "left" || value  == "center" || value == "right") ? value : "left";			textField.autoSize = value;		}		// indicates the current align.		public function get align():String{			return(textField.autoSize);		}				// Internal Methods				private function applyFormat(format:TextFormat):void{			textField.defaultTextFormat = format;			textField.setTextFormat(format);		}				//------------------------------------		//	GRAPHICAL RENDER METHODS		//------------------------------------				/**		 * @private		 */		override protected function layout(rect:Rectangle):void{			var w:int = textField.width;			var h:int = textField.height;			switch (textField.autoSize) {				case TextFieldAutoSize.CENTER:					textField.x = (rect.width-w)*0.5;					break;				case TextFieldAutoSize.LEFT:					textField.x = 0;					break;				case TextFieldAutoSize.RIGHT:					textField.x = -(w - rect.width);					break;			}		}					//------------------------------------		// Deconstruction		//------------------------------------				/**		 * @private;		 */		override public function destroy():void{						// destoying the super implemenation.			super.destroy();		}			}}